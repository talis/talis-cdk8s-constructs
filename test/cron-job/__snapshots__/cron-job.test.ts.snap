// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`CronJob > Props > All the props 1`] = `
[
  {
    "apiVersion": "batch/v1",
    "kind": "CronJob",
    "metadata": {
      "labels": {
        "app": "my-app",
        "environment": "test",
        "instance": "test",
        "region": "local",
        "release": "v1",
        "role": "cronjob",
      },
      "name": "test-cron-job-test-c88f7970",
      "namespace": "test",
    },
    "spec": {
      "failedJobsHistoryLimit": 2,
      "jobTemplate": {
        "spec": {
          "backoffLimit": 1,
          "template": {
            "metadata": {
              "annotations": {
                "cluster-autoscaler.kubernetes.io/safe-to-evict": "false",
                "cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes": "tmp-dir",
              },
              "labels": {
                "app": "my-app",
                "environment": "test",
                "instance": "test",
                "region": "local",
                "release": "v1",
                "role": "cronjob",
              },
            },
            "spec": {
              "containers": [
                {
                  "args": [
                    "--foo",
                    "bar",
                  ],
                  "command": [
                    "/bin/sh",
                    "-c",
                    "echo hello",
                  ],
                  "env": [
                    {
                      "name": "FOO",
                      "value": "bar",
                    },
                  ],
                  "envFrom": [
                    {
                      "configMapRef": {
                        "name": "foo-config",
                      },
                    },
                  ],
                  "image": "talis/app:worker-v1",
                  "imagePullPolicy": "Always",
                  "lifecycle": {
                    "postStart": {
                      "exec": {
                        "command": [
                          "/bin/sh",
                          "-c",
                          "echo hello",
                        ],
                      },
                    },
                    "preStop": {
                      "exec": {
                        "command": [
                          "/bin/sh",
                          "-c",
                          "echo goodbye",
                        ],
                      },
                    },
                  },
                  "name": "my-container",
                  "resources": {
                    "limits": {
                      "cpu": 1,
                      "memory": "1Gi",
                    },
                    "requests": {
                      "cpu": 0.1,
                      "memory": "100Mi",
                    },
                  },
                  "securityContext": {
                    "runAsGroup": 1000,
                    "runAsNonRoot": true,
                    "runAsUser": 1000,
                  },
                  "volumeMounts": [
                    {
                      "mountPath": "/tmp",
                      "name": "tmp-dir",
                    },
                  ],
                  "workingDir": "/some/path",
                },
              ],
              "imagePullSecrets": [
                {
                  "name": "foo-secret",
                },
              ],
              "initContainers": [
                {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "echo hello",
                  ],
                  "image": "busybox:1.35.0",
                  "name": "init-container",
                },
              ],
              "restartPolicy": "OnFailure",
              "volumes": [
                {
                  "emptyDir": {},
                  "name": "tmp-dir",
                },
              ],
            },
          },
        },
      },
      "schedule": "0 0 13 * 5",
      "startingDeadlineSeconds": 200,
      "successfulJobsHistoryLimit": 4,
      "suspend": false,
    },
  },
]
`;

exports[`CronJob > Props > Minimal required props 1`] = `
[
  {
    "apiVersion": "batch/v1",
    "kind": "CronJob",
    "metadata": {
      "labels": {
        "instance": "cron-job-test",
        "release": "v1",
        "role": "cronjob",
      },
      "name": "test-cron-job-test-c88f7970",
    },
    "spec": {
      "failedJobsHistoryLimit": 1,
      "jobTemplate": {
        "spec": {
          "backoffLimit": 2,
          "template": {
            "metadata": {
              "labels": {
                "instance": "cron-job-test",
                "release": "v1",
                "role": "cronjob",
              },
            },
            "spec": {
              "containers": [
                {
                  "image": "talis/app:worker-v1",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "app",
                  "resources": {
                    "requests": {
                      "cpu": "100m",
                      "memory": "100Mi",
                    },
                  },
                },
              ],
              "restartPolicy": "OnFailure",
            },
          },
        },
      },
      "schedule": "0 0 13 * 5",
      "successfulJobsHistoryLimit": 3,
    },
  },
]
`;
