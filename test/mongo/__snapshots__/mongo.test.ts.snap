// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Mongo Props All the props 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "labels": Object {
        "app": "my-app",
        "environment": "test",
        "instance": "test",
        "region": "local",
        "release": "v1",
        "role": "mongo",
      },
      "name": "test-mongo-test-c844268f",
      "namespace": "test",
    },
    "spec": Object {
      "clusterIP": "None",
      "ports": Array [
        Object {
          "port": 27017,
          "protocol": "TCP",
        },
      ],
      "selector": Object {
        "app": "my-app",
        "instance": "test",
        "role": "mongo",
      },
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": Object {
      "labels": Object {
        "app": "my-app",
        "environment": "test",
        "instance": "test",
        "region": "local",
        "release": "v1",
        "role": "mongo",
      },
      "name": "test-mongo-test-mongo-test-sts-c8cbd639",
      "namespace": "test",
    },
    "spec": Object {
      "replicas": 1,
      "selector": Object {
        "matchLabels": Object {
          "app": "my-app",
          "instance": "test",
          "role": "mongo",
        },
      },
      "serviceName": "test-mongo-test-c844268f",
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "app": "my-app",
            "environment": "test",
            "instance": "test",
            "region": "local",
            "release": "v1",
            "role": "mongo",
          },
        },
        "spec": Object {
          "containers": Array [
            Object {
              "args": Array [
                "--storageEngine",
                "wiredTiger",
              ],
              "image": "mongo:v1",
              "livenessProbe": Object {
                "failureThreshold": 5,
                "initialDelaySeconds": 5,
                "tcpSocket": Object {
                  "port": 27017,
                },
                "timeoutSeconds": 5,
              },
              "name": "mongo",
              "ports": Array [
                Object {
                  "containerPort": 27017,
                },
              ],
              "readinessProbe": Object {
                "exec": Object {
                  "command": Array [
                    "mongo",
                    "--eval",
                    "db.adminCommand('ping')",
                  ],
                },
                "failureThreshold": 5,
                "initialDelaySeconds": 5,
                "timeoutSeconds": 5,
              },
              "resources": Object {
                "limits": Object {
                  "cpu": "100m",
                  "memory": "500Mi",
                },
              },
              "volumeMounts": Array [
                Object {
                  "mountPath": "/data/db",
                  "name": "mongo-data",
                },
              ],
            },
          ],
        },
      },
      "volumeClaimTemplates": Array [
        Object {
          "metadata": Object {
            "name": "mongo-data",
          },
          "spec": Object {
            "accessModes": Array [
              "ReadWriteOnce",
            ],
            "resources": Object {
              "requests": Object {
                "storage": "20Gi",
              },
            },
            "storageClassName": "general-purpose-delete",
          },
        },
      ],
    },
  },
]
`;

exports[`Mongo Props Minimal required props 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "labels": Object {
        "instance": "mongo-test",
        "release": "v1",
        "role": "mongo",
      },
      "name": "test-mongo-test-c844268f",
    },
    "spec": Object {
      "clusterIP": "None",
      "ports": Array [
        Object {
          "port": 27017,
          "protocol": "TCP",
        },
      ],
      "selector": Object {
        "instance": "mongo-test",
        "role": "mongo",
      },
    },
  },
  Object {
    "apiVersion": "apps/v1",
    "kind": "StatefulSet",
    "metadata": Object {
      "labels": Object {
        "instance": "mongo-test",
        "release": "v1",
        "role": "mongo",
      },
      "name": "test-mongo-test-mongo-test-sts-c8cbd639",
    },
    "spec": Object {
      "replicas": 1,
      "selector": Object {
        "matchLabels": Object {
          "instance": "mongo-test",
          "role": "mongo",
        },
      },
      "serviceName": "test-mongo-test-c844268f",
      "template": Object {
        "metadata": Object {
          "labels": Object {
            "instance": "mongo-test",
            "release": "v1",
            "role": "mongo",
          },
        },
        "spec": Object {
          "containers": Array [
            Object {
              "args": Array [
                "--storageEngine",
                "mmapv1",
                "--smallfiles",
              ],
              "image": "mongo:v1",
              "livenessProbe": Object {
                "failureThreshold": 5,
                "initialDelaySeconds": 5,
                "tcpSocket": Object {
                  "port": 27017,
                },
                "timeoutSeconds": 5,
              },
              "name": "mongo",
              "ports": Array [
                Object {
                  "containerPort": 27017,
                },
              ],
              "readinessProbe": Object {
                "exec": Object {
                  "command": Array [
                    "mongo",
                    "--eval",
                    "db.adminCommand('ping')",
                  ],
                },
                "failureThreshold": 5,
                "initialDelaySeconds": 5,
                "timeoutSeconds": 5,
              },
              "resources": Object {
                "limits": Object {
                  "cpu": "100m",
                  "memory": "500Mi",
                },
              },
              "volumeMounts": Array [
                Object {
                  "mountPath": "/data/db",
                  "name": "mongo-data",
                },
              ],
            },
          ],
        },
      },
      "volumeClaimTemplates": Array [
        Object {
          "metadata": Object {
            "name": "mongo-data",
          },
          "spec": Object {
            "accessModes": Array [
              "ReadWriteOnce",
            ],
            "resources": Object {
              "requests": Object {
                "storage": "20Gi",
              },
            },
            "storageClassName": "general-purpose-delete",
          },
        },
      ],
    },
  },
]
`;
